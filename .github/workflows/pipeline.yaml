name: Build & push devcontainer

on:
  push:
    branches: main
  workflow_dispatch:
  schedule:
    - cron: '0 0 7 * *'

concurrency:
    group: main
    cancel-in-progress: true

jobs:
  changes:
    runs-on: ubuntu-latest
    # Required permissions
    permissions:
      pull-requests: read
    outputs:
      # Expose matched filters as job 'packages' output variable
      packages: ${{ steps.filter.outputs.changes }}
    steps:
      - name: checkout
        uses: actions/checkout@v4
      # For pull requests it's not necessary to checkout the code
      - uses: dorny/paths-filter@v3
        id: filter
        with:
          filters: |
            poetry: 
              - Dockerfile.poetry
              - .github/workflows/pipeline.yaml
            uv: 
              - Dockerfile.uv
              - .github/workflows/pipeline.yaml
  build-and-push:
    runs-on: ubuntu-latest
    needs: changes
    if: ${{ needs.changes.outputs.packages != '[]' && needs.changes.outputs.packages != '' }}
    strategy:
      matrix:
        python: ["3.10", "3.11", "3.12"]
        base: ${{ fromJSON(needs.changes.outputs.packages) }}
      fail-fast: false
    steps:
      - name: checkout
        uses: actions/checkout@v4
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: jhginn
          password: ${{ secrets.DOCKERHUB_PASSWORD }}
      - name: buildx
        uses: docker/setup-buildx-action@v3
      - name: set tag
        run: |
            echo "TAG=ubuntu2204-py${{ matrix.base }}$(echo ${{ matrix.python }} | tr -d '.')-$(date +%F | tr -d '-')" >> $GITHUB_ENV
            echo "LATEST_TAG=ubuntu2204-py${{ matrix.base }}$(echo ${{ matrix.python }} | tr -d '.')-latest" >> $GITHUB_ENV
      - name: Base img
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile.${{ matrix.base }}
          platforms: linux/amd64,linux/arm64
          push: true
          tags: jhginn/devcontainer:${{ env.LATEST_TAG }}-base, jhginn/devcontainer:${{ env.TAG }}-base
          build-args: |
            PYTHON_VERSION=${{ matrix.python }}
          target: base
      - name: with just
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile.${{ matrix.base }}
          platforms: linux/amd64,linux/arm64
          push: true
          tags: jhginn/devcontainer:${{ env.LATEST_TAG }}-just, jhginn/devcontainer:${{ env.TAG }}-just
          build-args: |
              PYTHON_VERSION=${{ matrix.python }}
          target: just
      - name: with terraform
        uses: docker/build-push-action@v5
        with:
            context: .
            file: ./Dockerfile.${{ matrix.base }}
            platforms: linux/amd64,linux/arm64
            push: true
            tags: jhginn/devcontainer:${{ env.LATEST_TAG }}-terraform, jhginn/devcontainer:${{ env.TAG }}-terraform
            build-args: |
                PYTHON_VERSION=${{ matrix.python }}
            target: terraform
      - name: with gcloud
        uses: docker/build-push-action@v5
        with:
            context: .
            file: ./Dockerfile.${{ matrix.base }}
            platforms: linux/amd64,linux/arm64
            push: true
            tags: jhginn/devcontainer:${{ env.LATEST_TAG }}-gcloud, jhginn/devcontainer:${{ env.TAG }}-gcloud
            build-args: |
                PYTHON_VERSION=${{ matrix.python }}
            target: gcloud
